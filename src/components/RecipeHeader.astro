---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

type Props = {
    title: string;
    image: CollectionEntry<'recipe'>['data']['image'];
    overview: CollectionEntry<'recipe'>['data']['overview'];
    tags: CollectionEntry<'recipe'>['data']['tags'];
}

const { title, image, overview, tags } = Astro.props;

---

<div class="recipeHeader">
    <div class="h-full w-1/2 imageContainer">
        <Image
            src={image}
            width={600}
            height={200}
            format='webp'
            class='object-cover h-full w-full'
            alt={`img of ${title}`}/>
    </div>
    <div class="w-1/2 infoContainer">
        <h1>{title}</h1>
        <div class="timeContainer">
            Kochzeit: <span class="font-bold">{ overview.activeTime }</span> <span>{ overview.activeTimeUnit }</span>
            Gesamtzeit: <span class="font-bold">{ overview.totalTime }</span> <span>{ overview.totalTimeUnit }</span>
        </div>
        <div class="tagContainer">
            {
                tags && tags.map(tag => (<span class="tag">{tag}</span>))
            }
        </div>
    </div>
</div>

<style>
    .recipeHeader {
        grid-area: recipeHeader;
        height: 400px;
        display: flex;
    }

    .imageContainer {
        clip-path: polygon(0 0, 100% 0, 90% 100%, 0% 100%);
    }

    .infoContainer {
        padding: 0px 20px;
    }

    .timeContainer {
        margin-left: 40px;
        margin-top: 40px;
    }

    .tagContainer {
        margin-left: 40px;
        margin-top: 10px;
    }

    h1 {
        font-size: 2rem;
        margin: 20px 0px;
        text-align: center;
        background-color: var(--color-primary);
    }

    .tag {
        background-color: var(--color-accent);
        color: var(--color-accent-text);
        padding: 6px 15px;
        border-radius: 15px;
        margin-right: 5px;
    }
</style>